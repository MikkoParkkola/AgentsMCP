apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: agentsmcp-hpa
  namespace: agentsmcp
  labels:
    app: agentsmcp
    component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: agentsmcp
  minReplicas: 3
  maxReplicas: 20
  metrics:
  # CPU-based scaling
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  
  # Memory-based scaling
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  
  # Custom metrics (if available)
  - type: Pods
    pods:
      metric:
        name: http_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"
  
  # External metrics (if using external monitoring)
  - type: External
    external:
      metric:
        name: queue_depth
        selector:
          matchLabels:
            app: agentsmcp
      target:
        type: Value
        value: "50"
  
  behavior:
    scaleDown:
      # Allow scaling down 10% of current replicas every 60 seconds
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    
    scaleUp:
      # Allow scaling up more aggressively
      stabilizationWindowSeconds: 30
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
      - type: Pods
        value: 4
        periodSeconds: 30
      selectPolicy: Max

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: agentsmcp-hpa-aggressive
  namespace: agentsmcp
  labels:
    app: agentsmcp
    component: autoscaling
    profile: aggressive
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: agentsmcp
  minReplicas: 5
  maxReplicas: 50
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 60
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 120
      policies:
      - type: Percent
        value: 5
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 15
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15

---
# Vertical Pod Autoscaler (if VPA is installed)
apiVersion: autoscaling.k8s.io/v1
kind: VerticalPodAutoscaler
metadata:
  name: agentsmcp-vpa
  namespace: agentsmcp
  labels:
    app: agentsmcp
    component: autoscaling
spec:
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: agentsmcp
  updatePolicy:
    updateMode: "Auto"  # Can be "Off", "Initial", or "Auto"
  resourcePolicy:
    containerPolicies:
    - containerName: agentsmcp
      minAllowed:
        cpu: 100m
        memory: 128Mi
      maxAllowed:
        cpu: 2000m
        memory: 4Gi
      controlledResources: ["cpu", "memory"]
      controlledValues: RequestsAndLimits