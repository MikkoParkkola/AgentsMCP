name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  build:
    name: Build distributions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      - name: Install build backend
        run: pip install build
      - name: Build sdist and wheel
        run: python -m build
      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/*

  github-release:
    name: Create GitHub Release
    needs: [build, binary-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Download macOS binary artifact
        uses: actions/download-artifact@v4
        with:
          name: binary-macos-arm64
          path: artifacts
      - name: Create release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/*
            artifacts/*
          generate_release_notes: true

  publish-pypi:
    name: Publish to PyPI
    needs: build
    runs-on: ubuntu-latest
    if: ${{ secrets.PYPI_API_TOKEN != '' }}
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Download dist artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Install twine
        run: pip install twine
      - name: Upload to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*

  binary-macos:
    name: Build macOS (arm64) binary
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install project (runtime only) and PyInstaller
        run: |
          python -m pip install --upgrade pip
          pip install . pyinstaller
      - name: Build single-file binary
        run: bash scripts/build_binary.sh
      - name: Upload macOS binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-macos-arm64
          path: dist/agentsmcp
